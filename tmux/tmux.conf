set -g default-shell $SHELL

set -g mouse on

# clipboard stuff - START

#set -g set-clipboard off

# Linux only
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow, 
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# clipboard - END

# set -g focus-events on

# improve colors
# set -g default-terminal "tmux-256color"
set -g default-terminal "xterm-256color"


# Put this in your ~/.tmux.conf and replace XXX by your $TERM outside of tmux:
# example: set-option -sa terminal-overrides ',XXX:RGB'
# For older tmux versions use this instead:
# example: set-option -ga terminal-overrides ',XXX:Tc'
# set-option -sa terminal-overrides ',xterm-256color:RGB'
#set-option -ga terminal-overrides ',xterm-256color:Tc'

set -g terminal-overrides 'xterm*:smcup@:rmcup@'

set -g status-bg '#ffffff'
set -g status-fg '#000000'

# Scroll History
set -g history-limit 30000

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 50

#time format for clock window
set -g clock-mode-style 12
set -g clock-mode-colour '#666666'

# # Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# # bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# # bind-key -T copy-mode-vi C-\ select-pane -l

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
	is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
	    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
	    bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
	    bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
	    bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
	    bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
	    tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
	    if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
	    	    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
	    	    if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
	    	    	    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

	    	    	    bind-key -T copy-mode-vi 'C-h' select-pane -L
	    	    	    bind-key -T copy-mode-vi 'C-j' select-pane -D
	    	    	    bind-key -T copy-mode-vi 'C-k' select-pane -U
	    	    	    bind-key -T copy-mode-vi 'C-l' select-pane -R
	    	    	    bind-key -T copy-mode-vi 'C-\' select-pane -l

# clear-screen workaround
bind-key C-l send-keys 'C-l'

# source-file "$HOME/.dotfiles/tmux/local.conf"
if-shell "[[ -f $HOME/.config/dotfiles/tmux/tmux.conf ]]" "source-file '$HOME/.config/dotfiles/tmux/tmux.conf'"
